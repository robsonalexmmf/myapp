import 'package:flutter/material.dart';
import 'service_management.dart';
import 'service_need_list.dart';
import 'proposals_page.dart';
import 'payment_management.dart';
import 'message_center.dart';
import 'service_evaluation.dart';
import 'profile_edit.dart';

class ProviderDashboardPage extends StatefulWidget {
  const ProviderDashboardPage({super.key});

  @override
  State<ProviderDashboardPage> createState() => _ProviderDashboardPageState();
}

class _ProviderDashboardPageState extends State<ProviderDashboardPage> {
  int _selectedIndex = 0;

    static final List<Widget> _pages = <Widget>[
    Padding(
      padding: const EdgeInsets.all(16),
      child: ListView(
        children: [
          ListTile(
            leading: const Icon(Icons.build, color: Colors.blue),
            title: const Text('Meus Servi√ßos', style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold)),
          ),
          const SizedBox(height: 12),
          ListTile(
            leading: const Text('üîß', style: TextStyle(fontSize: 20)),
            title: const Text('Vincular aos servi√ßos que realiza (checkbox)'),
          ),
          ListTile(
            leading: const Text('üöó', style: TextStyle(fontSize: 20)),
            title: const Text('Se escolher "Buscar ou Levar Carro", mostrar op√ß√£o:'),
          ),
          ListTile(
            leading: const Text('‚úÖ', style: TextStyle(fontSize: 20)),
            title: const Text('Capacidade de diagnosticar problemas no ve√≠culo'),
          ),
          const SizedBox(height: 20),
          Builder(
            builder: (context) => ElevatedButton.icon(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const ServiceManagementPage(),
                  ),
                );
              },
              icon: const Icon(Icons.settings),
              label: const Text('Gerenciar Servi√ßos'),
            ),
          ),
        ],
      ),
    ),
    Padding(
      padding: const EdgeInsets.all(16),
      child: ListView(
        children: [
          ListTile(
            leading: const Icon(Icons.location_on, color: Colors.red),
            title: const Text('Necessidades Pr√≥ximas', style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold)),
          ),
          const SizedBox(height: 12),
          ListTile(
            leading: const Text('üìç', style: TextStyle(fontSize: 20)),
            title: const Text('Lista filtrada por raio de geolocaliza√ß√£o'),
          ),
          ListTile(
            leading: const Text('üîé', style: TextStyle(fontSize: 20)),
            title: const Text('Ver detalhes da necessidade'),
          ),
          ListTile(
            leading: const Text('üí∞', style: TextStyle(fontSize: 20)),
            title: const Text('Enviar proposta com valor menor que a anterior'),
          ),
          const SizedBox(height: 20),
          Builder(
            builder: (context) => ElevatedButton.icon(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const ServiceNeedListPage(),
                  ),
                );
              },
              icon: const Icon(Icons.list),
              label: const Text('Visualizar Necessidades'),
            ),
          ),
        ],
      ),
    ),
    Padding(
      padding: const EdgeInsets.all(16),
      child: ListView(
        children: [
          ListTile(
            leading: const Icon(Icons.gavel, color: Colors.orange),
            title: const Text('Minhas Propostas', style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold)),
          ),
          const SizedBox(height: 12),
          ListTile(
            leading: const Text('üìÑ', style: TextStyle(fontSize: 20)),
            title: const Text('Ver status: enviada, aceita, recusada'),
          ),
          ListTile(
            leading: const Text('üìú', style: TextStyle(fontSize: 20)),
            title: const Text('Ver hist√≥rico'),
          ),
          const SizedBox(height: 20),
          Builder(
            builder: (context) => ElevatedButton.icon(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const ProposalsPage(),
                  ),
                );
              },
              icon: const Icon(Icons.visibility),
              label: const Text('Visualizar Propostas'),
            ),
          ),
        ],
      ),
    ),
    Padding(
      padding: const EdgeInsets.all(16),
      child: ListView(
        children: [
          ListTile(
            leading: const Icon(Icons.flag, color: Colors.green),
            title: const Text('Execu√ß√£o do Servi√ßo', style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold)),
          ),
          const SizedBox(height: 12),
          ListTile(
            leading: const Text('üìù', style: TextStyle(fontSize: 20)),
            title: const Text('Preencher informa√ß√µes obrigat√≥rias por tipo de servi√ßo:'),
          ),
          ListTile(
            leading: const Text('üì∑', style: TextStyle(fontSize: 20)),
            title: const Text('Upload de fotos (traseira, painel, internas, etc.)'),
          ),
          ListTile(
            leading: const Text('üìç', style: TextStyle(fontSize: 20)),
            title: const Text('Confirma√ß√£o de geolocaliza√ß√£o'),
          ),
          const SizedBox(height: 20),
          Builder(
            builder: (context) => ElevatedButton.icon(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const ServiceManagementPage(),
                  ),
                );
              },
              icon: const Icon(Icons.build_circle),
              label: const Text('Gerenciar Execu√ß√£o'),
            ),
          ),
        ],
      ),
    ),
    Padding(
      padding: const EdgeInsets.all(16),
      child: ListView(
        children: [
          ListTile(
            leading: const Icon(Icons.attach_money, color: Colors.greenAccent),
            title: const Text('Ganhos', style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold)),
          ),
          const SizedBox(height: 12),
          ListTile(
            leading: const Text('üíµ', style: TextStyle(fontSize: 20)),
            title: const Text('Ver valores recebidos por servi√ßo'),
          ),
          ListTile(
            leading: const Text('üìÖ', style: TextStyle(fontSize: 20)),
            title: const Text('Status de pagamento (pendente, pago)'),
          ),
          ListTile(
            leading: const Text('üìä', style: TextStyle(fontSize: 20)),
            title: const Text('Relat√≥rio de transfer√™ncias'),
          ),
          const SizedBox(height: 20),
          Builder(
            builder: (context) => ElevatedButton.icon(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const PaymentManagementPage(),
                  ),
                );
              },
              icon: const Icon(Icons.receipt_long),
              label: const Text('Visualizar Ganhos'),
            ),
          ),
        ],
      ),
    ),
    Padding(
      padding: const EdgeInsets.all(16),
      child: ListView(
        children: [
          ListTile(
            leading: const Icon(Icons.message, color: Colors.blueAccent),
            title: const Text('Mensagens', style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold)),
          ),
          const SizedBox(height: 12),
          ListTile(
            leading: const Text('üí¨', style: TextStyle(fontSize: 20)),
            title: const Text('Chat com o propriet√°rio com tradu√ß√£o autom√°tica'),
          ),
          ListTile(
            leading: const Text('üì∏', style: TextStyle(fontSize: 20)),
            title: const Text('Envio de fotos e v√≠deos'),
          ),
          const SizedBox(height: 20),
          Builder(
            builder: (context) => ElevatedButton.icon(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const MessageCenterPage(),
                  ),
                );
              },
              icon: const Icon(Icons.chat),
              label: const Text('Abrir Central de Mensagens'),
            ),
          ),
        ],
      ),
    ),
    Padding(
      padding: const EdgeInsets.all(16),
      child: ListView(
        children: [
          ListTile(
            leading: const Icon(Icons.rate_review, color: Colors.purple),
            title: const Text('Avalia√ß√µes Recebidas', style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold)),
          ),
          const SizedBox(height: 12),
          ListTile(
            leading: const Text('‚≠ê', style: TextStyle(fontSize: 20)),
            title: const Text('Ver nota e coment√°rios deixados pelos propriet√°rios'),
          ),
          const SizedBox(height: 20),
          Builder(
            builder: (context) => ElevatedButton.icon(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const ServiceEvaluationPage(),
                  ),
                );
              },
              icon: const Icon(Icons.visibility),
              label: const Text('Visualizar Avalia√ß√µes'),
            ),
          ),
        ],
      ),
    ),
    Padding(
      padding: const EdgeInsets.all(16),
      child: ListView(
        children: [
          ListTile(
            leading: const Icon(Icons.person, color: Colors.teal),
            title: const Text('Perfil', style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold)),
          ),
          const SizedBox(height: 12),
          ListTile(
            leading: const Text('üë§', style: TextStyle(fontSize: 20)),
            title: const Text('Alterar dados pessoais e senha'),
          ),
          ListTile(
            leading: const Text('üåê', style: TextStyle(fontSize: 20)),
            title: const Text('Prefer√™ncia de idioma'),
          ),
          const SizedBox(height: 20),
          Builder(
            builder: (context) => ElevatedButton.icon(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const ProfileEditPage(),
                  ),
                );
              },
              icon: const Icon(Icons.edit),
              label: const Text('Editar Perfil'),
            ),
          ),
        ],
      ),
    ),
  ];

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

  BottomNavigationBarItem _buildNavItem(IconData icon, String label) {
    return BottomNavigationBarItem(
      icon: Icon(icon),
      label: label,
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Dashboard Prestador'),
        centerTitle: true,
        elevation: 8,
        backgroundColor: Theme.of(context).colorScheme.primary,
      ),
      body: _pages.elementAt(_selectedIndex),
      bottomNavigationBar: BottomNavigationBar(
        items: <BottomNavigationBarItem>[
          _buildNavItem(Icons.build, 'Servi√ßos'),
          _buildNavItem(Icons.location_on, 'Necessidades'),
          _buildNavItem(Icons.gavel, 'Propostas'),
          _buildNavItem(Icons.flag, 'Execu√ß√£o'),
          _buildNavItem(Icons.attach_money, 'Ganhos'),
          _buildNavItem(Icons.message, 'Mensagens'),
          _buildNavItem(Icons.rate_review, 'Avalia√ß√µes'),
          _buildNavItem(Icons.person, 'Perfil'),
        ],
        currentIndex: _selectedIndex,
        selectedItemColor: Theme.of(context).colorScheme.primary,
        unselectedItemColor: Colors.grey,
        onTap: _onItemTapped,
        type: BottomNavigationBarType.fixed,
      ),
    );
  }
}
